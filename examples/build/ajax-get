{"css":"ul {\n\tlist-style: none;\n\tpadding: 0;\n}\n\na {\n    color: #000;\n    transition: color .2s;\n}\n\na:visited {\n    color: #ccc;\n}\n\na:hover {\n    color: #999;\n}\n","html":"<ul id=\"images\"></ul>\n","javascript":"var imageList = document.getElementById('images');\n\nkx.ajax.get({\n    url: 'https://unsplash.it/list',\n    success: function(status, data) {\n        kx.iterator(data).each(function(item) {\n            var imageListItem = document.createElement('li'),\n                imageListItemLink = document.createElement('a');\n\n            imageListItemLink.appendChild(document.createTextNode(\n                item.author + ' - ' + item.filename\n            ));\n            imageListItemLink.setAttribute('href', item.post_url);\n            imageListItemLink.setAttribute('target', '_blank');\n\n            imageListItem.appendChild(imageListItemLink);\n            imageList.appendChild(imageListItem);\n        });\n    }\n});\n"}